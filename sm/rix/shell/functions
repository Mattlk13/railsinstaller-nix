#!/bin/sh

rix_initialize()
{
  export logs=$initial_pwd/log/$timestamp
  mkdir -p "${logs}"
  trap "rix.failed" ERR
  trap "rix.end" EXIT
  rix.start
}

rix.start()
{
  trace_filter action
  log "Rails Installer uniX - preparation script - start"
  log_step "backup sm/rvm"      rix.old_install.backup
  rix.sm.install
  rix.rvm.install
  rix.rvm.install.ruby 1.9.2
  rix.rvm.install.ruby jruby
  rix.rvm.install.ruby rbx
  rix.rvm.default.ruby 1.9.2
}

rix.end()
{
  log_step "restore sm/rvm"     rix.old_install.restore
  log_step "cleaning old logs"  rix.clean.old.logs
  log "Rails Installer uniX - preparation script - finished"
}

rix.failed()
{
  local _status=$?
  if [[ -n "$log_step_message" ]]
  then
    log_step failed
  fi
  backtrace 'error' no_exit
  rix.end
  exit ${_status}
}

rix.rvm.install.ruby()
{
  log_step "install ruby - $1"
  printf "\n"
  if rvm install $@ 2>&1 | tee $logs/install_ruby-$1
  then
    log_step success
  else
    log_step failed
  fi
}

rix.rvm.default.ruby()
{
  log_step "default ruby - $1"
  local _name
  if _name=$( rvm --default use $@  | awk '{print $2}' )
  then
    log_step success
  else
    log_step failed
  fi
  log_step "use ruby - $1"
  if source /usr/local/rvm/environments/${_name##*/}
  then
    log_step success
  else
    log_step failed
  fi
}

rix.rvm.install()
{
  log_step "install rvm"
  pushd $rvm_local_path >/dev/null
  if bash -e ./install >$logs/install_rvm 2>&1
  then
    __status=0
    PATH=/usr/local/rvm/bin:$PATH
    log_step success
  else
    log_step failed
  fi
  popd >/dev/null

  local _rvm_path
  if [[ -n "$SUDO_USER" ]]
  then
    _rvm_path=$( awk -F : '/^'"$SUDO_USER"':/ { print $6 }' < /etc/passwd )
    if [[ -d "${_rvm_path}/.rvm" ]]
    then
      _rvm_path="${_rvm_path}/.rvm"
    else
      _rvm_path=""
    fi
  fi
  if [[ -z "${_rvm_path}" && -d /usr/local/rvm.$timestamp ]]
  then
    _rvm_path=/usr/local/rvm.$timestamp
  fi
  if [[ -d ${_rvm_path}/archives/ ]]
  then
    log_step "link archives to ${_rvm_path}/archives"
    rm -rf /usr/local/rvm/archives/
    ln -s ${_rvm_path}/archives/ /usr/local/rvm/archives
    log_step success
  fi
}

rix.sm.install()
{
  log_step "install sm"
  export install_path=/opt/sm
  install_sm >$logs/install_sm 2>&1
  log_step_message="install sm" #TODO: fix log_step to allow building trees
  log_step success
}

rix.old_install.backup()
{
  if paths exist /opt/sm
  then paths move from /opt/sm to /opt/sm.$timestamp
  fi

  if paths exist /usr/local/rvm
  then paths move from /usr/local/rvm to /usr/local/rvm.$timestamp
  fi
}

rix.old_install.restore()
{
  paths remove /opt/sm
  if paths exist /opt/sm.$timestamp
  then paths move from /opt/sm.$timestamp to /opt/sm
  fi

  paths remove /usr/local/rvm
  if paths exist /usr/local/rvm.$timestamp
  then paths move from /usr/local/rvm.$timestamp to /usr/local/rvm
  fi
}

rix.clean.old.logs()
{
  local _log _logs_base="${logs%/*}"
  for _log in $( cd ${_logs_base} ; ls -t1 | tail +6 )
  do rm -rf ${_logs_base}/${_log}
  done
}
