#!/bin/sh

sm()
{
  eval env -i ${__initial_env[@]} /opt/sm/bin/sm \$@
}

rix.sm.install.set()
{
  sm set install $1
}

rix.sm.install.pkg()
{
  local name
  name=$1
  shift
  sm $name install "$@"
}

rix.sm.install.gcc.darwin()
{
  typeset instaler_md5

  instaler_md5=df36aa87606feb99d0db9ac9a492819e
  if [[ $(md5 -q /opt/rix/GCC-10.7-v2.pkg 2>/dev/null) == $instaler_md5 ]]
  then
    log "Using existing OSX-GCC-Installer 10.7-v2 with md5=$instaler_md5"
  else
    log "Downloading OSX-GCC-Installer 10.7-v2"
    curl -kL https://github.com/downloads/kennethreitz/osx-gcc-installer/GCC-10.7-v2.pkg -o /opt/rix/GCC-10.7-v2.pkg
    [[ $(md5 -q /opt/rix/GCC-10.7-v2.pkg 2>/dev/null) == $instaler_md5 ]]
  fi

  instaler_md5=d1db5bab6a3f6b9f3b5577a130baeefa
  if [[ $(md5 -q /opt/rix/GCC-10.6.pkg 2>/dev/null) == $instaler_md5 ]]
  then
    log "Using existing OSX-GCC-Installer 10.6 with md5=$instaler_md5"
  else
    log "Downloading OSX-GCC-Installer 10.6"
    curl -kL https://github.com/downloads/kennethreitz/osx-gcc-installer/GCC-10.6.pkg -o /opt/rix/GCC-10.6.pkg
    [[ $(md5 -q /opt/rix/GCC-10.6.pkg 2>/dev/null) == $instaler_md5 ]]
  fi

  # it's not gcc but fits in the logic
  instaler_md5=1735da7fae0e1e231957709fc3a402ad
  if [[ $(md5 -q /opt/rix/JewelryBox_RIX.zip 2>/dev/null) == $instaler_md5 ]]
  then
    log "Using existing JewelryBox with md5=$instaler_md5"
  else
    [[ ! -f /opt/rix/JewelryBox_RIX.zip ]] || rm -f /opt/rix/JewelryBox_RIX.zip
    log "Downloading JewelryBox"
    TODO: this will fail, we need better link
    curl -kL https://docs.google.com/file/d/0B7-mS4miSnyfN1JWOHNJYTRxZTg/edit?pli=1 -o /opt/rix/JewelryBox_RIX.zip
    [[ $(md5 -q /opt/rix/JewelryBox_RIX.zip 2>/dev/null) == $instaler_md5 ]]
  fi
  # and this is to support JewelryBox uninstalling
  curl -kL https://raw.github.com/mpapis/pkg_uninstaller/master/pkg-install -o /opt/rix/pkg-install

}

rix.sm.install.gcc.linux()
{
  rix.sm.install.pkg gcc --enable-languages=c++
}

rix.sm.download.zsh()
{
  typeset platform
  platform="`uname -s`/`uname -m`"

  case $platform in
    (Darwin/i386|Darwin/x86_64|Linux/i386|Linux/x86_64)
      true
      ;;
    (Linux/i[456]86)
      platform=Linux/i386
      ;;
    (*)
      echo "Unsupported platform: $platform."
      return 1
      ;;
  esac

  if test -z "${sm_curl_command:-}"
  then
    if command -v curl >/dev/null
    then sm_curl_command=curl
    else
      echo "Could not find curl, please install and try again."
      return 2
    fi
  fi

  mkdir -p "${sm_shell%/*}"

  ${sm_curl_command} https://smf.sh/zsh/$platform/zsh -o "${sm_shell}"
  chmod +x "${sm_shell}"
}

# Redefine for tree
__sm.log.step()
{
  __sm.log.step.tree "$@"
}

rix.sm.install()
{
  typeset log_step_message
  export install_path sm_shell

  install_path=/opt/sm
  sm_shell="${install_path}/zsh/bin/zsh"

  log step "download zsh" rix.sm.download.zsh
  log step "install sm" install_sm >$logs/install_sm 2>&1

  PATH=/opt/sm/bin:$PATH
}
