#!/bin/sh

sm()
{
  eval env -i ${__initial_env[@]} /opt/sm/bin/sm \$@
}

rix.sm.install.set()
{
  sm set install $1
}

rix.sm.install.pkg()
{
  local name
  name=$1
  shift
  sm $name install "$@"
}

rix.sm.install.gcc.darwin.download()
{
  if [[ $(md5 -q /opt/rix/$1 2>/dev/null) == $2 ]]
  then
    log "Using existing $1 with md5=$2"
  else
    log "Downloading $1"
    curl -kL $3 -o /opt/rix/$1
    [[ $(md5 -q /opt/rix/$1 2>/dev/null) == $2 ]]
  fi
}

rix.sm.install.gcc.darwin()
{
  rix.sm.install.gcc.darwin.download GCC-10.6.pkg d1db5bab6a3f6b9f3b5577a130baeefa \
    https://github.com/downloads/kennethreitz/osx-gcc-installer/GCC-10.6.pkg

  rix.sm.install.gcc.darwin.download GCC-10.7-v2.pkg df36aa87606feb99d0db9ac9a492819e \
    https://github.com/downloads/kennethreitz/osx-gcc-installer/GCC-10.7-v2.pkg

  rix.sm.install.gcc.darwin.download JewelryBox_v1.3.tar.bz2 23a4417b76fb763447bd88e5c5d6f941 \
    https://doc-0s-6c-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/uu735t84av89c3npp65t8ublotth1hql/1361664000000/15605595434155487156/*/0B7-mS4miSnyfN1JWOHNJYTRxZTg?e=download

  rix.sm.install.gcc.darwin.download JewelryBox_v1.4.1.tar.bz2 4f7cdbdaa7a4efe1140e0e0f3bf49593 \
    http://jewelrybox.unfiniti.com/download/JewelryBox_v1.4.1.tar.bz2

  # and this is to support JewelryBox uninstalling
  curl -kL https://raw.github.com/mpapis/pkg_uninstaller/master/pkg-install -o /opt/rix/pkg-install
}

rix.sm.install.gcc.linux()
{
  rix.sm.install.pkg gcc --enable-languages=c++
}

rix.sm.download.zsh()
{
  typeset platform
  platform="`uname -s`/`uname -m`"

  case $platform in
    (Darwin/i386|Darwin/x86_64|Linux/i386|Linux/x86_64)
      true
      ;;
    (Linux/i[456]86)
      platform=Linux/i386
      ;;
    (*)
      echo "Unsupported platform: $platform."
      return 1
      ;;
  esac

  if test -z "${sm_curl_command:-}"
  then
    if command -v curl >/dev/null
    then sm_curl_command=curl
    else
      echo "Could not find curl, please install and try again."
      return 2
    fi
  fi

  mkdir -p "${sm_shell%/*}"

  ${sm_curl_command} https://smf.sh/zsh/$platform/zsh -o "${sm_shell}"
  chmod +x "${sm_shell}"
}

# Redefine for tree
#__sm.log.step()
#{
#  __sm.log.step.tree "$@"
#}

rix.sm.install()
{
  typeset log_step_message
  export install_path sm_shell

  install_path=/opt/sm
  sm_shell="${install_path}/zsh/bin/zsh"

  log step "download zsh" rix.sm.download.zsh
  install_sm 2>&1 | tee $logs/install_sm

  PATH=/opt/sm/bin:$PATH
}
